<Window x:Class="TestPort.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestPort"
        mc:Ignorable="d"
        Title="MainWindow" Height="900" Width="1000">
    <Window.DataContext >
        <local:TestSuiteViewModel />
    </Window.DataContext>
    <Window.Resources>
        <!-- Radio button styling from: https://stackoverflow.com/questions/1317891/simple-wpf-radiobutton-binding -->
        <Style x:Key="RadioButtonListItem" TargetType="{x:Type ListBoxItem}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <DockPanel LastChildFill="True" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                            <RadioButton IsChecked="{TemplateBinding IsSelected}" Focusable="False" IsHitTestVisible="False" VerticalAlignment="Center" Margin="0,0,4,0" />
                            <ContentPresenter
                            Content             = "{TemplateBinding ContentControl.Content}"
                            ContentTemplate     = "{TemplateBinding ContentControl.ContentTemplate}"
                            ContentStringFormat = "{TemplateBinding ContentControl.ContentStringFormat}"
                            HorizontalAlignment = "{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment   = "{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels = "{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="RadioButtonList" TargetType="ListBox">
            <Style.Resources>
                <Style TargetType="Label">
                    <Setter Property="Padding" Value="0" />
                </Style>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource RadioButtonListItem}" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="HorizontalRadioButtonList" BasedOn="{StaticResource RadioButtonList}" TargetType="ListBox">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Background="Transparent" Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SpacedRadioButtonListItem" TargetType="ListBoxItem" BasedOn="{StaticResource RadioButtonListItem}">
            <Setter Property="Margin" Value="3"></Setter>
        </Style>
        
        <Style x:Key="WideTextBox" TargetType="TextBox">
            <Setter Property="Width" Value="500" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Label Grid.Column="0" Grid.Row="0" Content="TestPort" />
        <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal">
            <Button Name="UpdateNames" 
                    Content="Update Names"
                    Command="{Binding UpdateTestNames}"
                    Visibility="Collapsed" />
        </StackPanel>
        <ListView
            Grid.Row="1"
            Grid.Column="1"
            Grid.RowSpan="2"
            ItemsSource="{Binding Tests}"
            SelectedItem="{Binding SelectedItem}" >
            <ListView.ItemTemplate>
                <DataTemplate>
                <StackPanel>
                    <Label Content="{Binding TestName}" />
                    <Label Content="{Binding TestOperation}" FontSize="10" />
                </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <StackPanel Grid.Row="1" Grid.Column="2" Background="Azure">
            <StackPanel Orientation="Horizontal">
                <Label Content="Name" Width="100" />
                <TextBox Style="{StaticResource WideTextBox}" Text="{Binding SelectedItem.TestName}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,3">
                <Label Content="Operation" Width="100"/>
                <TextBox Style="{StaticResource WideTextBox}" IsReadOnly="True" Text="{Binding SelectedItem.TestOperation}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Attribute ID" Width="100"/>
                <TextBox Style="{StaticResource WideTextBox}" Text="{Binding SelectedItem.AttributeId}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Attribute Name" Width="100"/>
                <TextBox Style="{StaticResource WideTextBox}" Text="{Binding SelectedItem.AttributeName}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Data Length" Width="100"/>
                <TextBox Style="{StaticResource WideTextBox}" Text="{Binding SelectedItem.DataLength}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Help Text" Width="100"/>
                <TextBox Style="{StaticResource WideTextBox}" 
                         Text="{Binding SelectedItem.HelpText}" 
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Height="60"
                         MaxHeight="80"
                         VerticalScrollBarVisibility="Auto"
                         FontSize="10" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Active" Width="100"/>
                <CheckBox IsChecked="{Binding SelectedItem.IsActive}" Margin="6" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Type" Width="100"/>
                <ListBox Style="{StaticResource HorizontalRadioButtonList}"
                         SelectedValue="{Binding SelectedItem.TestType}"
                         ItemContainerStyle="{StaticResource SpacedRadioButtonListItem}"
                         SelectedValuePath="Tag">
                    <ListBoxItem Tag="{x:Static local:TestType.Text}">Text</ListBoxItem>
                    <ListBoxItem Tag="{x:Static local:TestType.Numeric}">Numeric</ListBoxItem>
                </ListBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Status" Width="100"/>
                <ListBox Style="{StaticResource HorizontalRadioButtonList}"
                         SelectedValue="{Binding SelectedItem.TestStatus}"
                         ItemContainerStyle="{StaticResource SpacedRadioButtonListItem}"
                         SelectedValuePath="Tag">
                    <ListBoxItem Tag="{x:Static local:TestStatus.Normal}">Normal</ListBoxItem>
                </ListBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Name="JsonDump" Content="Dump JSON" Command="{Binding DumpJson}" Margin="6" />
                <Button Name="JsonSaveToFile" Content="Save JSON" Command="{Binding SaveJson}" Margin="6" />
                <Button Name="JsonReadFromFile" Content="Read JSON File" Command="{Binding ReadJson}" Margin="6" />
                <!-- https://stackoverflow.com/questions/19632270/binding-combobox-selecteditem-using-mvvm -->
                <ComboBox Name="CbxFiledTestConfigs"
                          ItemsSource="{Binding FiledTestConfigs}"
                          SelectedItem="{Binding SelectedTestConfig}"
                          Margin="6"
                          IsSynchronizedWithCurrentItem="True"
                          Width="345"
                          />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Messages" Width="60"/>
                <Button Content="x"
                        Command="{Binding ClearLogMessages}"
                        Margin="6" 
                        FontSize="14"
                        ToolTip="Clear Log Messages" />
                <TextBox IsReadOnly="True"
                         Style="{StaticResource WideTextBox}"
                         Text="{Binding StatusViewModel.LogMessage, Mode=OneWay}"
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Height="60"
                         MaxHeight="80"
                         Width="513"
                         VerticalScrollBarVisibility="Auto"
                         Margin="6"
                         FontSize="10" />
            </StackPanel>
        </StackPanel>
        <TextBox Background="Azure"
                 Grid.Row="2" 
                 Grid.Column="2"
                 Text="{Binding SelectedItem.JsonDump}"
                 AcceptsReturn="True"
                 Height="360"
                 Width="Auto"
                 MaxWidth="600"
                 VerticalScrollBarVisibility="Auto"
                 HorizontalScrollBarVisibility="Auto"
                 FontSize="10" />
    </Grid>
</Window>
